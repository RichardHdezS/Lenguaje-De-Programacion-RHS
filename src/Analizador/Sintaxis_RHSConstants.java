/* Generated By:JavaCC: Do not edit this line. Sintaxis_RHSConstants.java */
package Analizador;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Sintaxis_RHSConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASIGNACION = 1;
  /** RegularExpression Id. */
  int MAS = 2;
  /** RegularExpression Id. */
  int MENOS = 3;
  /** RegularExpression Id. */
  int MULTI = 4;
  /** RegularExpression Id. */
  int DIV = 5;
  /** RegularExpression Id. */
  int INCR = 6;
  /** RegularExpression Id. */
  int DECR = 7;
  /** RegularExpression Id. */
  int EVALUAR = 8;
  /** RegularExpression Id. */
  int PUBLICO = 9;
  /** RegularExpression Id. */
  int PRIVADO = 10;
  /** RegularExpression Id. */
  int ESTATICO = 11;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int MAIN = 13;
  /** RegularExpression Id. */
  int PROGRAMA = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int ELSEIF = 17;
  /** RegularExpression Id. */
  int FOR = 18;
  /** RegularExpression Id. */
  int SWITCH = 19;
  /** RegularExpression Id. */
  int CASE = 20;
  /** RegularExpression Id. */
  int BREAK = 21;
  /** RegularExpression Id. */
  int DEFAUL = 22;
  /** RegularExpression Id. */
  int DO = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int WRITE = 25;
  /** RegularExpression Id. */
  int READ = 26;
  /** RegularExpression Id. */
  int PARENI = 27;
  /** RegularExpression Id. */
  int PAREND = 28;
  /** RegularExpression Id. */
  int LLAVEI = 29;
  /** RegularExpression Id. */
  int LLAVED = 30;
  /** RegularExpression Id. */
  int BRACKETI = 31;
  /** RegularExpression Id. */
  int BRACKETD = 32;
  /** RegularExpression Id. */
  int PUNTCOM = 33;
  /** RegularExpression Id. */
  int COMMA = 34;
  /** RegularExpression Id. */
  int PUNTO = 35;
  /** RegularExpression Id. */
  int DOUBLECOMMA = 36;
  /** RegularExpression Id. */
  int IGUAL = 37;
  /** RegularExpression Id. */
  int MENQ = 38;
  /** RegularExpression Id. */
  int MEN = 39;
  /** RegularExpression Id. */
  int MAYQ = 40;
  /** RegularExpression Id. */
  int MAY = 41;
  /** RegularExpression Id. */
  int DIF = 42;
  /** RegularExpression Id. */
  int BAN = 43;
  /** RegularExpression Id. */
  int OR = 44;
  /** RegularExpression Id. */
  int AND = 45;
  /** RegularExpression Id. */
  int TRUE = 46;
  /** RegularExpression Id. */
  int FALSE = 47;
  /** RegularExpression Id. */
  int INT = 48;
  /** RegularExpression Id. */
  int DEC = 49;
  /** RegularExpression Id. */
  int CHR = 50;
  /** RegularExpression Id. */
  int STR = 51;
  /** RegularExpression Id. */
  int BOOL = 52;
  /** RegularExpression Id. */
  int NUMERO = 53;
  /** RegularExpression Id. */
  int IDENTIDICADOR = 54;
  /** RegularExpression Id. */
  int DECIMAL = 55;
  /** RegularExpression Id. */
  int CADENA = 56;
  /** RegularExpression Id. */
  int CARAC = 57;
  /** RegularExpression Id. */
  int DOUBLEPOINT = 58;
  /** RegularExpression Id. */
  int IMPDEC = 59;
  /** RegularExpression Id. */
  int IMPSTR = 60;
  /** RegularExpression Id. */
  int IMPCHR = 61;
  /** RegularExpression Id. */
  int IMPBOL = 62;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"EvaluarExprecion\"",
    "\"public\"",
    "\"private\"",
    "\"static\"",
    "\"void\"",
    "\"StartMain()\"",
    "\"BEGIN\"",
    "\"_if\"",
    "\"_else\"",
    "\"_ifElse\"",
    "\"_for\"",
    "\"_SW\"",
    "\"case_SW\"",
    "\"Case_break\"",
    "\"Defl\"",
    "\"_do\"",
    "\"_while\"",
    "\"_escribe_\"",
    "\"_leer_\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\"==\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"!\"",
    "\"||\"",
    "\"&&\"",
    "\"true\"",
    "\"false\"",
    "\"Int\"",
    "\"Dec\"",
    "\"Chr\"",
    "\"Str\"",
    "\"Bool\"",
    "<NUMERO>",
    "<IDENTIDICADOR>",
    "<DECIMAL>",
    "<CADENA>",
    "<CARAC>",
    "\":\"",
    "\"%d\"",
    "\"%s\"",
    "\"%c\"",
    "\"%b\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
  };

}
